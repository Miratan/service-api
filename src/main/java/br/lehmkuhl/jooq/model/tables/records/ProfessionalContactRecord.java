/**
 * This class is generated by jOOQ
 */
package br.lehmkuhl.jooq.model.tables.records;


import br.lehmkuhl.jooq.model.tables.ProfessionalContact;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessionalContactRecord extends UpdatableRecordImpl<ProfessionalContactRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -811778277;

    /**
     * Setter for <code>servicofloripa.professional_contact.professional_id</code>.
     */
    public void setProfessionalId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>servicofloripa.professional_contact.professional_id</code>.
     */
    public Long getProfessionalId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>servicofloripa.professional_contact.contact_id</code>.
     */
    public void setContactId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>servicofloripa.professional_contact.contact_id</code>.
     */
    public Long getContactId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProfessionalContact.PROFESSIONAL_CONTACT.PROFESSIONAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ProfessionalContact.PROFESSIONAL_CONTACT.CONTACT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getProfessionalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getContactId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfessionalContactRecord value1(Long value) {
        setProfessionalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfessionalContactRecord value2(Long value) {
        setContactId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfessionalContactRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfessionalContactRecord
     */
    public ProfessionalContactRecord() {
        super(ProfessionalContact.PROFESSIONAL_CONTACT);
    }

    /**
     * Create a detached, initialised ProfessionalContactRecord
     */
    public ProfessionalContactRecord(Long professionalId, Long contactId) {
        super(ProfessionalContact.PROFESSIONAL_CONTACT);

        set(0, professionalId);
        set(1, contactId);
    }
}
