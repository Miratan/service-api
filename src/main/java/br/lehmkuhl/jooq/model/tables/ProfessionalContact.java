/**
 * This class is generated by jOOQ
 */
package br.lehmkuhl.jooq.model.tables;


import br.lehmkuhl.jooq.model.Keys;
import br.lehmkuhl.jooq.model.Servicofloripa;
import br.lehmkuhl.jooq.model.tables.records.ProfessionalContactRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfessionalContact extends TableImpl<ProfessionalContactRecord> {

    private static final long serialVersionUID = -871803461;

    /**
     * The reference instance of <code>servicofloripa.professional_contact</code>
     */
    public static final ProfessionalContact PROFESSIONAL_CONTACT = new ProfessionalContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfessionalContactRecord> getRecordType() {
        return ProfessionalContactRecord.class;
    }

    /**
     * The column <code>servicofloripa.professional_contact.professional_id</code>.
     */
    public final TableField<ProfessionalContactRecord, Long> PROFESSIONAL_ID = createField("professional_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>servicofloripa.professional_contact.contact_id</code>.
     */
    public final TableField<ProfessionalContactRecord, Long> CONTACT_ID = createField("contact_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>servicofloripa.professional_contact</code> table reference
     */
    public ProfessionalContact() {
        this("professional_contact", null);
    }

    /**
     * Create an aliased <code>servicofloripa.professional_contact</code> table reference
     */
    public ProfessionalContact(String alias) {
        this(alias, PROFESSIONAL_CONTACT);
    }

    private ProfessionalContact(String alias, Table<ProfessionalContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProfessionalContact(String alias, Table<ProfessionalContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Servicofloripa.SERVICOFLORIPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProfessionalContactRecord> getPrimaryKey() {
        return Keys.KEY_PROFESSIONAL_CONTACT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProfessionalContactRecord>> getKeys() {
        return Arrays.<UniqueKey<ProfessionalContactRecord>>asList(Keys.KEY_PROFESSIONAL_CONTACT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProfessionalContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProfessionalContactRecord, ?>>asList(Keys.FK_PROFESSIONAL_CONTACT_PROFESSIONAL, Keys.FK_PROFESSIONAL_CONTACT_CONTACT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfessionalContact as(String alias) {
        return new ProfessionalContact(alias, this);
    }

    /**
     * Rename this table
     */
    public ProfessionalContact rename(String name) {
        return new ProfessionalContact(name, null);
    }
}
